server:
  port: 8080
spring:
  application:
    name: gateway
  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8088/auth/realms/his
            # Individual properties can also be provided this way
        #            token-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/token
        #            authorization-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/auth
        #            userinfo-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/userinfo
        #            user-name-attribute: preferred_username

        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            client-id: myclient
            client-secret: rtfw3ClQPexCu3xSKcgPlHw9HlT5AzAe
            authorization-grant-type: authorization_code
            redirect-uri: "https://www.google.com/"
  cloud:
    gateway:
      routes:
        - id: ro
          uri: http://localhost:8081
          predicates:
            - Path=/api/consume/**
          filters:
            - TokenRelay=
            - RemoveRequestHeader=Cookie

logging:
  level:
    org:
      springframework:
        security:
          web: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"